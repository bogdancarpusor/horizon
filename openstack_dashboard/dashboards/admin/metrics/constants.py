from django.utils.translation import ugettext_lazy as _

METRICS_DESCRIPTION = {
    "instance": _("Existence of instance"),
    "instance:<type>": _("Existence of instance <type> "),
    "memory": _("Volume of RAM"),
    "memory.usage": _("Volume of RAM used"),
    "cpu": _("CPU time used"),
    "cpu_util": _("Average CPU utilization"),
    "vcpus": _("Number of VCPUs"),
    "disk.read.requests": _("Number of read requests"),
    "disk.write.requests": _("Number of write requests"),
    "disk.read.bytes": _("Volume of reads"),
    "disk.write.bytes": _("Volume of writes"),
    "disk.read.requests.rate": _("Average rate of read requests"),
    "disk.write.requests.rate": _("Average rate of write requests"),
    "disk.read.bytes.rate": _("Average rate of reads"),
    "disk.write.bytes.rate": _("Average volume of writes"),
    "disk.root.size": _("Size of root disk"),
    "disk.ephemeral.size": _("Size of ephemeral disk"),
    "network.incoming.bytes": _("Number of incoming bytes "
                                "on the network for a VM interface"),
    "network.outgoing.bytes": _("Number of outgoing bytes "
                                "on the network for a VM interface"),
    "network.incoming.packets": _("Number of incoming "
                                  "packets for a VM interface"),
    "network.outgoing.packets": _("Number of outgoing "
                                  "packets for a VM interface"),
    "network.incoming.bytes.rate": _("Average rate per sec of incoming "
                                     "bytes on a VM network interface"),
    "network.outgoing.bytes.rate": _("Average rate per sec of outgoing "
                                     "bytes on a VM network interface"),
    "network.incoming.packets.rate": _("Average rate per sec of incoming "
                                       "packets on a VM network interface"),
    "network.outgoing.packets.rate": _("Average rate per sec of outgoing "
                                       "packets on a VM network interface"),
    "network": _("Existence of network"),
    'network.create': _("Creation requests for this network"),
    'network.update': _("Update requests for this network"),
    'subnet': _("Existence of subnet"),
    'subnet.create': _("Creation requests for this subnet"),
    'subnet.update': _("Update requests for this subnet"),
    'port':  _("Existence of port"),
    'port.create': _("Creation requests for this port"),
    'port.update': _("Update requests for this port"),
    'router': _("Existence of router"),
    'router.create': _("Creation requests for this router"),
    'router.update': _("Update requests for this router"),
    'ip.floating': _("Existence of floating ip"),
    'ip.floating.create': _("Creation requests for this floating ip"),
    'ip.floating.update': _("Update requests for this floating ip"),
    'image': _("Image existence check"),
    'image.size': _("Uploaded image size"),
    'image.update': _("Number of image updates"),
    'image.upload': _("Number of image uploads"),
    'image.delete': _("Number of image deletions"),
    'image.download': _("Image is downloaded"),
    'image.serve': _("Image is served out"),
    'volume': _("Existence of volume"),
    'volume.size': _("Size of volume"),
    'storage.objects': _("Number of objects"),
    'storage.objects.size': _("Total size of stored objects"),
    'storage.objects.containers': _("Number of containers"),
    'storage.objects.incoming.bytes': _("Number of incoming bytes"),
    'storage.objects.outgoing.bytes': _("Number of outgoing bytes"),
    'storage.api.request': _("Number of API requests against swift"),
    'energy': _("Amount of energy"),
    'power': _("Power consumption"),
    'hardware.ipmi.node.power': _("System Current Power"),
    'hardware.ipmi.fan': _("Fan RPM"),
    'hardware.ipmi.temperature': _("Sensor Temperature Reading"),
    'hardware.ipmi.current': _("Sensor Current Reading"),
    'hardware.ipmi.voltage': _("Sensor Voltage Reading"),
    'hardware.ipmi.node.temperature': _("System Temperature Reading"),
    'hardware.ipmi.node.outlet_temperature': _("System Outlet Temperature Reading"),
    'hardware.ipmi.node.airflow': _("System Airflow Reading"),
    'hardware.ipmi.node.cups': _("System CUPS Reading"),
    'hardware.ipmi.node.cpu_util': _("System CPU Utility Reading"),
    'hardware.ipmi.node.mem_util': _("System Memory Utility Reading"),
    'hardware.ipmi.node.io_util': _("System IO Utility Reading")
}
